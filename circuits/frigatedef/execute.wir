#define WORD 24
#define COMD 4
#define ARG 10
#define INPLEN 106
#define OUTLEN 68
#define DUMMYLOC 2

#parties 2

#input 1 inputlen
#output 1 outputlen

typedef int_t INPLEN inputlen
typedef int_t OUTLEN outputlen
typedef uint_t COMD command
typedef int_t WORD data
typedef uint_t ARG address

typedef int_t 20 int

function void main()
{
    command com  = input1{0:COMD};
    address arg1 = input1{4:ARG};
    address arg2 = input1{14:ARG};
    data inp1    = input1{24:WORD};
    data inp2    = input1{48:WORD};
    data tr      = input1{72:WORD};
    address pc   = input1{96:ARG};

    address newPC = pc + 1;
    data newTR = tr;
    address writeLOC = DUMMYLOC;
    data writeVAL = 0;

    if (com == 0){ /* JMP */
        newPC = arg1;
    }else if (com == 1){ /* JLT */
        if (tr < 0){
            newPC = arg1;
        }
    }else if (com == 2){ /* JGT */
        if (tr > 0){
            newPC = arg1;
        }
    }else if (com == 3){ /* JEQ */
        if (tr == 0){
            newPC = arg1;
        }
    }else if (com == 4){ /* JNE */
        if (tr != 0){
            newPC = arg1;
        }
    }else if (com == 5){ /* ADD */
        newTR = inp1 + inp2;
    }else if (com == 6){ /* SUB */
        newTR = inp1 - inp2;
    }else if (com == 7){ /* HLT */
        /* do nothing */
    }else if (com == 8){ /* MOV */
        writeLOC = arg1;
        writeVAL = inp2;
    }else if (com == 9){ /* DRF */
        newTR = inp1;
    }

    output1{0:ARG}   = newPC;
    output1{10:WORD} = newTR;
    output1{34:ARG}  = writeLOC;
    output1{44:WORD} = writeVAL;
}

